apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    kubepose.container.type: app
    kubepose.service.group: myapp
  name: myapp
spec:
  selector:
    matchLabels:
      kubepose.service: myapp
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        kubepose.container.type: app
        kubepose.service: myapp
        kubepose.service.group: myapp
    spec:
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: api
        resources: {}
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: web
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets/secret
          name: secret
          readOnly: true
          subPath: content
      initContainers:
      - args:
        - echo
        - migrate
        image: alpine
        imagePullPolicy: IfNotPresent
        name: db-setup
        resources: {}
      - image: fluentd
        imagePullPolicy: IfNotPresent
        name: logshipper
        resources: {}
        restartPolicy: Always
        volumeMounts:
        - mountPath: /run/secrets/secret
          name: secret
          readOnly: true
          subPath: content
      restartPolicy: Always
      volumes:
      - name: secret
        secret:
          secretName: secret-16e40588
status: {}

---
apiVersion: v1
data:
  content: aHVzaAo=
immutable: true
kind: Secret
metadata:
  annotations:
    generated-from: kubepose
    kubepose.original-name: secret
    kubepose.secrets.hmac-key: kubepose.secrets.v1
  creationTimestamp: null
  name: secret-16e40588
type: Opaque
