apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    kubepose.container.type: app
    kubepose.service.group: myapp
  name: api
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: api
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: api
        kubepose.container.type: app
        kubepose.service.group: myapp
    spec:
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: api
        resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    kubepose.container.type: init
    kubepose.service.group: myapp
  name: logshipper
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: logshipper
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: logshipper
        kubepose.container.type: init
        kubepose.service.group: myapp
    spec:
      containers:
      - image: fluentd
        imagePullPolicy: IfNotPresent
        name: logshipper
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets/secret
          name: secret
          readOnly: true
          subPath: secret
      restartPolicy: Always
      volumes:
      - name: secret
        secret:
          secretName: secret-79f7063e
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    kubepose.service.group: myapp
  name: web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: web
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: web
        kubepose.service.group: myapp
    spec:
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: web
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets/secret
          name: secret
          readOnly: true
          subPath: secret
      restartPolicy: Always
      volumes:
      - name: secret
        secret:
          secretName: secret-79f7063e
status: {}

---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    kubepose.container.type: init
    kubepose.service.group: myapp
  name: db-setup
spec:
  containers:
  - args:
    - echo
    - migrate
    image: alpine
    imagePullPolicy: IfNotPresent
    name: db-setup
    resources: {}
  restartPolicy: OnFailure
status: {}

---
apiVersion: v1
data:
  secret: aHVzaAo=
immutable: true
kind: Secret
metadata:
  annotations:
    kubepose.secret.hmac-key: kubepose.secret.v1
  creationTimestamp: null
  name: secret-79f7063e
type: Opaque
