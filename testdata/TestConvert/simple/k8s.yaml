apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    testing: abc
  name: redis-leader
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-leader
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: redis-leader
    spec:
      containers:
      - image: redis
        imagePullPolicy: IfNotPresent
        name: redis-leader
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 2000Mi
          requests:
            cpu: "1"
            memory: 1Gi
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    testing: abc
  name: web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: web
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: web
    spec:
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    testing: abc
  name: redis-leader
spec:
  ports:
  - name: "6379"
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app.kubernetes.io/name: redis-leader
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    testing: abc
  name: web
spec:
  ports:
  - name: "8080"
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: web
status:
  loadBalancer: {}
