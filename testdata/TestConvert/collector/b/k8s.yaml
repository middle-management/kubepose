apiVersion: v1
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          http:
            endpoint: 0.0.0.0:4318
    exporters:
      debug:
        verbosity: detailed
    service:
      pipelines:
        traces:
          receivers:
            - otlp
          exporters:
            - debug
immutable: true
kind: ConfigMap
metadata:
  annotations:
    generated-from: kubepose
    kubepose.volume.hmac-key: kubepose.volumes.v1
    kubepose.volume.source: b/config.yaml
  creationTimestamp: null
  name: collector-4eb5a9b6

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  name: collector
spec:
  selector:
    matchLabels:
      kubepose.service: collector
  template:
    metadata:
      creationTimestamp: null
      labels:
        kubepose.service: collector
    spec:
      containers:
      - env:
        - name: K8S_LOG_PATH
          value: /var/log/pods/default_*/*/*.log
        - name: K8S_NAMESPACE
          value: default
        image: otel/opentelemetry-collector-contrib:0.116.1
        name: collector
        ports:
        - containerPort: 4317
          protocol: TCP
        - containerPort: 4318
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /etc/otelcol-contrib/config.yaml
          name: collector-4eb5a9b6
          readOnly: true
          subPath: config.yaml
        - mountPath: /var/log/pods
          name: pod-logs
          readOnly: true
      restartPolicy: Always
      volumes:
      - configMap:
          name: collector-4eb5a9b6
        name: collector-4eb5a9b6
      - hostPath:
          path: /var/log/pods
        name: pod-logs
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: collector
spec:
  ports:
  - name: "4317"
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: "4318"
    port: 4318
    protocol: TCP
    targetPort: 4318
  selector:
    kubepose.service: collector
status:
  loadBalancer: {}
