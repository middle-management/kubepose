apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubepose.service.expose: multi.k8s.orb.local,*.k8s.orb.local
  name: multi
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: multi
  strategy: {}
  template:
    metadata:
      annotations:
        kubepose.service.expose: multi.k8s.orb.local,*.k8s.orb.local
      labels:
        app.kubernetes.io/name: multi
    spec:
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: multi
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubepose.service.expose: |
      multi.k8s.orb.local
      *.k8s.orb.local , example.com
  name: multispaced
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: multispaced
  strategy: {}
  template:
    metadata:
      annotations:
        kubepose.service.expose: |
          multi.k8s.orb.local
          *.k8s.orb.local , example.com
      labels:
        app.kubernetes.io/name: multispaced
    spec:
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: multispaced
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubepose.service.expose: web.k8s.orb.local
  name: web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: web
  strategy: {}
  template:
    metadata:
      annotations:
        kubepose.service.expose: web.k8s.orb.local
      labels:
        app.kubernetes.io/name: web
    spec:
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubepose.service.expose: multi.k8s.orb.local,*.k8s.orb.local
  name: multi
spec:
  rules:
  - host: multi.k8s.orb.local
    http:
      paths:
      - backend:
          service:
            name: multi
            port:
              number: 8080
        path: /
        pathType: Prefix
  - host: '*.k8s.orb.local'
    http:
      paths:
      - backend:
          service:
            name: multi
            port:
              number: 8080
        path: /
        pathType: Prefix
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubepose.service.expose: |
      multi.k8s.orb.local
      *.k8s.orb.local , example.com
  name: multispaced
spec:
  rules:
  - host: multi.k8s.orb.local
    http:
      paths:
      - backend:
          service:
            name: multispaced
            port:
              number: 8080
        path: /
        pathType: Prefix
  - host: '*.k8s.orb.local'
    http:
      paths:
      - backend:
          service:
            name: multispaced
            port:
              number: 8080
        path: /
        pathType: Prefix
  - host: example.com
    http:
      paths:
      - backend:
          service:
            name: multispaced
            port:
              number: 8080
        path: /
        pathType: Prefix
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubepose.service.expose: web.k8s.orb.local
  name: web
spec:
  rules:
  - host: web.k8s.orb.local
    http:
      paths:
      - backend:
          service:
            name: web
            port:
              number: 8080
        path: /
        pathType: Prefix
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubepose.service.expose: multi.k8s.orb.local,*.k8s.orb.local
  name: multi
spec:
  ports:
  - name: "8080"
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/name: multi
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubepose.service.expose: |
      multi.k8s.orb.local
      *.k8s.orb.local , example.com
  name: multispaced
spec:
  ports:
  - name: "8080"
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/name: multispaced
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubepose.service.expose: web.k8s.orb.local
  name: web
spec:
  ports:
  - name: "8080"
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/name: web
status:
  loadBalancer: {}
