apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    testing: def
  creationTimestamp: null
  labels:
    gcr.io/google-containers/: BAR
    testing: abc
  name: bar
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: bar
  strategy: {}
  template:
    metadata:
      annotations:
        testing: def
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: bar
        gcr.io/google-containers/: BAR
    spec:
      containers:
      - image: busybox
        imagePullPolicy: IfNotPresent
        name: bar
        resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    testing: def
  creationTimestamp: null
  labels:
    foo1: gcr.io/google-containers/
    foo2: gcr.io/google-containers/
    foo3: default
    foo4: gcr.io/google-containers/
    testing: abc
  name: foo
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: foo
  strategy: {}
  template:
    metadata:
      annotations:
        testing: def
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: foo
        foo1: gcr.io/google-containers/
        foo2: gcr.io/google-containers/
        foo3: default
        foo4: gcr.io/google-containers/
    spec:
      containers:
      - image: alpine
        imagePullPolicy: IfNotPresent
        name: foo
        resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    testing: def
  creationTimestamp: null
  labels:
    testing: abc
  name: rep
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: rep
  strategy: {}
  template:
    metadata:
      annotations:
        testing: def
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: rep
    spec:
      containers:
      - image: gcr.io/google-containers/busybox
        imagePullPolicy: IfNotPresent
        name: rep
        resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    testing: def
  creationTimestamp: null
  labels:
    testing: abc
  name: web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: web
  strategy: {}
  template:
    metadata:
      annotations:
        testing: def
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: web
    spec:
      containers:
      - args:
        - $(VAR_NOT_INTERPOLATED_BY_COMPOSE)
        image: alpine
        imagePullPolicy: IfNotPresent
        name: web
        resources: {}
      restartPolicy: Always
status: {}
